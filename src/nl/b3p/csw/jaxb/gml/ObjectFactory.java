//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.11.11 at 06:55:45 PM CET 
//


package nl.b3p.csw.jaxb.gml;

import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the nl.b3p.csw.jaxb.gml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: nl.b3p.csw.jaxb.gml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link CubicSplineType }
     * 
     */
    public CubicSplineType createCubicSplineType() {
        return new CubicSplineType();
    }

    /**
     * Create an instance of {@link TriangulatedSurfaceType }
     * 
     */
    public TriangulatedSurfaceType createTriangulatedSurfaceType() {
        return new TriangulatedSurfaceType();
    }

    /**
     * Create an instance of {@link AbstractSurfaceType }
     * 
     */
    public AbstractSurfaceType createAbstractSurfaceType() {
        return new AbstractSurfaceType();
    }

    /**
     * Create an instance of {@link OffsetCurveType }
     * 
     */
    public OffsetCurveType createOffsetCurveType() {
        return new OffsetCurveType();
    }

    /**
     * Create an instance of {@link AbstractGriddedSurfaceType }
     * 
     */
    public AbstractGriddedSurfaceType createAbstractGriddedSurfaceType() {
        return new AbstractGriddedSurfaceType();
    }

    /**
     * Create an instance of {@link MeasureListType }
     * 
     */
    public MeasureListType createMeasureListType() {
        return new MeasureListType();
    }

    /**
     * Create an instance of {@link FormulaType }
     * 
     */
    public FormulaType createFormulaType() {
        return new FormulaType();
    }

    /**
     * Create an instance of {@link GeometricPrimitivePropertyType }
     * 
     */
    public GeometricPrimitivePropertyType createGeometricPrimitivePropertyType() {
        return new GeometricPrimitivePropertyType();
    }

    /**
     * Create an instance of {@link PolygonPatchType }
     * 
     */
    public PolygonPatchType createPolygonPatchType() {
        return new PolygonPatchType();
    }

    /**
     * Create an instance of {@link ConversionToPreferredUnitType }
     * 
     */
    public ConversionToPreferredUnitType createConversionToPreferredUnitType() {
        return new ConversionToPreferredUnitType();
    }

    /**
     * Create an instance of {@link SolidArrayPropertyType }
     * 
     */
    public SolidArrayPropertyType createSolidArrayPropertyType() {
        return new SolidArrayPropertyType();
    }

    /**
     * Create an instance of {@link CurvePropertyType }
     * 
     */
    public CurvePropertyType createCurvePropertyType() {
        return new CurvePropertyType();
    }

    /**
     * Create an instance of {@link BagType }
     * 
     */
    public BagType createBagType() {
        return new BagType();
    }

    /**
     * Create an instance of {@link GridLengthType }
     * 
     */
    public GridLengthType createGridLengthType() {
        return new GridLengthType();
    }

    /**
     * Create an instance of {@link VectorType }
     * 
     */
    public VectorType createVectorType() {
        return new VectorType();
    }

    /**
     * Create an instance of {@link CylinderType }
     * 
     */
    public CylinderType createCylinderType() {
        return new CylinderType();
    }

    /**
     * Create an instance of {@link PolygonPatchArrayPropertyType }
     * 
     */
    public PolygonPatchArrayPropertyType createPolygonPatchArrayPropertyType() {
        return new PolygonPatchArrayPropertyType();
    }

    /**
     * Create an instance of {@link AssociationType }
     * 
     */
    public AssociationType createAssociationType() {
        return new AssociationType();
    }

    /**
     * Create an instance of {@link GenericMetaDataType }
     * 
     */
    public GenericMetaDataType createGenericMetaDataType() {
        return new GenericMetaDataType();
    }

    /**
     * Create an instance of {@link PolyhedralSurfaceType }
     * 
     */
    public PolyhedralSurfaceType createPolyhedralSurfaceType() {
        return new PolyhedralSurfaceType();
    }

    /**
     * Create an instance of {@link PointType }
     * 
     */
    public PointType createPointType() {
        return new PointType();
    }

    /**
     * Create an instance of {@link SpeedType }
     * 
     */
    public SpeedType createSpeedType() {
        return new SpeedType();
    }

    /**
     * Create an instance of {@link LineStringType }
     * 
     */
    public LineStringType createLineStringType() {
        return new LineStringType();
    }

    /**
     * Create an instance of {@link GeodesicStringType }
     * 
     */
    public GeodesicStringType createGeodesicStringType() {
        return new GeodesicStringType();
    }

    /**
     * Create an instance of {@link PointArrayPropertyType }
     * 
     */
    public PointArrayPropertyType createPointArrayPropertyType() {
        return new PointArrayPropertyType();
    }

    /**
     * Create an instance of {@link SurfaceArrayPropertyType }
     * 
     */
    public SurfaceArrayPropertyType createSurfaceArrayPropertyType() {
        return new SurfaceArrayPropertyType();
    }

    /**
     * Create an instance of {@link DerivationUnitTermType }
     * 
     */
    public DerivationUnitTermType createDerivationUnitTermType() {
        return new DerivationUnitTermType();
    }

    /**
     * Create an instance of {@link LineStringPropertyType }
     * 
     */
    public LineStringPropertyType createLineStringPropertyType() {
        return new LineStringPropertyType();
    }

    /**
     * Create an instance of {@link AbstractParametricCurveSurfaceType }
     * 
     */
    public AbstractParametricCurveSurfaceType createAbstractParametricCurveSurfaceType() {
        return new AbstractParametricCurveSurfaceType();
    }

    /**
     * Create an instance of {@link CodeListType }
     * 
     */
    public CodeListType createCodeListType() {
        return new CodeListType();
    }

    /**
     * Create an instance of {@link CodeType }
     * 
     */
    public CodeType createCodeType() {
        return new CodeType();
    }

    /**
     * Create an instance of {@link DMSAngleType }
     * 
     */
    public DMSAngleType createDMSAngleType() {
        return new DMSAngleType();
    }

    /**
     * Create an instance of {@link MultiSurfacePropertyType }
     * 
     */
    public MultiSurfacePropertyType createMultiSurfacePropertyType() {
        return new MultiSurfacePropertyType();
    }

    /**
     * Create an instance of {@link TinType }
     * 
     */
    public TinType createTinType() {
        return new TinType();
    }

    /**
     * Create an instance of {@link DirectPositionListType }
     * 
     */
    public DirectPositionListType createDirectPositionListType() {
        return new DirectPositionListType();
    }

    /**
     * Create an instance of {@link MultiPointType }
     * 
     */
    public MultiPointType createMultiPointType() {
        return new MultiPointType();
    }

    /**
     * Create an instance of {@link ReferenceType }
     * 
     */
    public ReferenceType createReferenceType() {
        return new ReferenceType();
    }

    /**
     * Create an instance of {@link EnvelopeType }
     * 
     */
    public EnvelopeType createEnvelopeType() {
        return new EnvelopeType();
    }

    /**
     * Create an instance of {@link ArrayType }
     * 
     */
    public ArrayType createArrayType() {
        return new ArrayType();
    }

    /**
     * Create an instance of {@link MetaDataPropertyType }
     * 
     */
    public MetaDataPropertyType createMetaDataPropertyType() {
        return new MetaDataPropertyType();
    }

    /**
     * Create an instance of {@link StringOrRefType }
     * 
     */
    public StringOrRefType createStringOrRefType() {
        return new StringOrRefType();
    }

    /**
     * Create an instance of {@link TimeType }
     * 
     */
    public TimeType createTimeType() {
        return new TimeType();
    }

    /**
     * Create an instance of {@link MeasureType }
     * 
     */
    public MeasureType createMeasureType() {
        return new MeasureType();
    }

    /**
     * Create an instance of {@link BSplineType }
     * 
     */
    public BSplineType createBSplineType() {
        return new BSplineType();
    }

    /**
     * Create an instance of {@link RingType }
     * 
     */
    public RingType createRingType() {
        return new RingType();
    }

    /**
     * Create an instance of {@link DerivedUnitType }
     * 
     */
    public DerivedUnitType createDerivedUnitType() {
        return new DerivedUnitType();
    }

    /**
     * Create an instance of {@link ConventionalUnitType }
     * 
     */
    public ConventionalUnitType createConventionalUnitType() {
        return new ConventionalUnitType();
    }

    /**
     * Create an instance of {@link PolygonPropertyType }
     * 
     */
    public PolygonPropertyType createPolygonPropertyType() {
        return new PolygonPropertyType();
    }

    /**
     * Create an instance of {@link MultiSolidType }
     * 
     */
    public MultiSolidType createMultiSolidType() {
        return new MultiSolidType();
    }

    /**
     * Create an instance of {@link SurfaceType }
     * 
     */
    public SurfaceType createSurfaceType() {
        return new SurfaceType();
    }

    /**
     * Create an instance of {@link AngleType }
     * 
     */
    public AngleType createAngleType() {
        return new AngleType();
    }

    /**
     * Create an instance of {@link AreaType }
     * 
     */
    public AreaType createAreaType() {
        return new AreaType();
    }

    /**
     * Create an instance of {@link KnotPropertyType }
     * 
     */
    public KnotPropertyType createKnotPropertyType() {
        return new KnotPropertyType();
    }

    /**
     * Create an instance of {@link MultiPolygonPropertyType }
     * 
     */
    public MultiPolygonPropertyType createMultiPolygonPropertyType() {
        return new MultiPolygonPropertyType();
    }

    /**
     * Create an instance of {@link GeometryArrayPropertyType }
     * 
     */
    public GeometryArrayPropertyType createGeometryArrayPropertyType() {
        return new GeometryArrayPropertyType();
    }

    /**
     * Create an instance of {@link ArcStringByBulgeType }
     * 
     */
    public ArcStringByBulgeType createArcStringByBulgeType() {
        return new ArcStringByBulgeType();
    }

    /**
     * Create an instance of {@link PointPropertyType }
     * 
     */
    public PointPropertyType createPointPropertyType() {
        return new PointPropertyType();
    }

    /**
     * Create an instance of {@link MultiLineStringPropertyType }
     * 
     */
    public MultiLineStringPropertyType createMultiLineStringPropertyType() {
        return new MultiLineStringPropertyType();
    }

    /**
     * Create an instance of {@link DictionaryEntryType }
     * 
     */
    public DictionaryEntryType createDictionaryEntryType() {
        return new DictionaryEntryType();
    }

    /**
     * Create an instance of {@link CircleType }
     * 
     */
    public CircleType createCircleType() {
        return new CircleType();
    }

    /**
     * Create an instance of {@link MultiSurfaceType }
     * 
     */
    public MultiSurfaceType createMultiSurfaceType() {
        return new MultiSurfaceType();
    }

    /**
     * Create an instance of {@link CoordType }
     * 
     */
    public CoordType createCoordType() {
        return new CoordType();
    }

    /**
     * Create an instance of {@link LinearRingType }
     * 
     */
    public LinearRingType createLinearRingType() {
        return new LinearRingType();
    }

    /**
     * Create an instance of {@link CodeOrNullListType }
     * 
     */
    public CodeOrNullListType createCodeOrNullListType() {
        return new CodeOrNullListType();
    }

    /**
     * Create an instance of {@link ClothoidType.RefLocation }
     * 
     */
    public ClothoidType.RefLocation createClothoidTypeRefLocation() {
        return new ClothoidType.RefLocation();
    }

    /**
     * Create an instance of {@link MultiGeometryPropertyType }
     * 
     */
    public MultiGeometryPropertyType createMultiGeometryPropertyType() {
        return new MultiGeometryPropertyType();
    }

    /**
     * Create an instance of {@link ArcByBulgeType }
     * 
     */
    public ArcByBulgeType createArcByBulgeType() {
        return new ArcByBulgeType();
    }

    /**
     * Create an instance of {@link CoordinatesType }
     * 
     */
    public CoordinatesType createCoordinatesType() {
        return new CoordinatesType();
    }

    /**
     * Create an instance of {@link TriangleType }
     * 
     */
    public TriangleType createTriangleType() {
        return new TriangleType();
    }

    /**
     * Create an instance of {@link AngleChoiceType }
     * 
     */
    public AngleChoiceType createAngleChoiceType() {
        return new AngleChoiceType();
    }

    /**
     * Create an instance of {@link SolidPropertyType }
     * 
     */
    public SolidPropertyType createSolidPropertyType() {
        return new SolidPropertyType();
    }

    /**
     * Create an instance of {@link GeometryPropertyType }
     * 
     */
    public GeometryPropertyType createGeometryPropertyType() {
        return new GeometryPropertyType();
    }

    /**
     * Create an instance of {@link TinType.ControlPoint }
     * 
     */
    public TinType.ControlPoint createTinTypeControlPoint() {
        return new TinType.ControlPoint();
    }

    /**
     * Create an instance of {@link MultiPointPropertyType }
     * 
     */
    public MultiPointPropertyType createMultiPointPropertyType() {
        return new MultiPointPropertyType();
    }

    /**
     * Create an instance of {@link LengthType }
     * 
     */
    public LengthType createLengthType() {
        return new LengthType();
    }

    /**
     * Create an instance of {@link GeodesicType }
     * 
     */
    public GeodesicType createGeodesicType() {
        return new GeodesicType();
    }

    /**
     * Create an instance of {@link ArcType }
     * 
     */
    public ArcType createArcType() {
        return new ArcType();
    }

    /**
     * Create an instance of {@link DirectPositionType }
     * 
     */
    public DirectPositionType createDirectPositionType() {
        return new DirectPositionType();
    }

    /**
     * Create an instance of {@link IndirectEntryType }
     * 
     */
    public IndirectEntryType createIndirectEntryType() {
        return new IndirectEntryType();
    }

    /**
     * Create an instance of {@link RectangleType }
     * 
     */
    public RectangleType createRectangleType() {
        return new RectangleType();
    }

    /**
     * Create an instance of {@link ConeType }
     * 
     */
    public ConeType createConeType() {
        return new ConeType();
    }

    /**
     * Create an instance of {@link BaseUnitType }
     * 
     */
    public BaseUnitType createBaseUnitType() {
        return new BaseUnitType();
    }

    /**
     * Create an instance of {@link OrientableCurveType }
     * 
     */
    public OrientableCurveType createOrientableCurveType() {
        return new OrientableCurveType();
    }

    /**
     * Create an instance of {@link SurfacePatchArrayPropertyType }
     * 
     */
    public SurfacePatchArrayPropertyType createSurfacePatchArrayPropertyType() {
        return new SurfacePatchArrayPropertyType();
    }

    /**
     * Create an instance of {@link PolygonType }
     * 
     */
    public PolygonType createPolygonType() {
        return new PolygonType();
    }

    /**
     * Create an instance of {@link MultiCurveType }
     * 
     */
    public MultiCurveType createMultiCurveType() {
        return new MultiCurveType();
    }

    /**
     * Create an instance of {@link VolumeType }
     * 
     */
    public VolumeType createVolumeType() {
        return new VolumeType();
    }

    /**
     * Create an instance of {@link ArrayAssociationType }
     * 
     */
    public ArrayAssociationType createArrayAssociationType() {
        return new ArrayAssociationType();
    }

    /**
     * Create an instance of {@link AbstractGriddedSurfaceType.Row }
     * 
     */
    public AbstractGriddedSurfaceType.Row createAbstractGriddedSurfaceTypeRow() {
        return new AbstractGriddedSurfaceType.Row();
    }

    /**
     * Create an instance of {@link CurveArrayPropertyType }
     * 
     */
    public CurveArrayPropertyType createCurveArrayPropertyType() {
        return new CurveArrayPropertyType();
    }

    /**
     * Create an instance of {@link BezierType }
     * 
     */
    public BezierType createBezierType() {
        return new BezierType();
    }

    /**
     * Create an instance of {@link LineStringSegmentType }
     * 
     */
    public LineStringSegmentType createLineStringSegmentType() {
        return new LineStringSegmentType();
    }

    /**
     * Create an instance of {@link UnitDefinitionType }
     * 
     */
    public UnitDefinitionType createUnitDefinitionType() {
        return new UnitDefinitionType();
    }

    /**
     * Create an instance of {@link ArcByCenterPointType }
     * 
     */
    public ArcByCenterPointType createArcByCenterPointType() {
        return new ArcByCenterPointType();
    }

    /**
     * Create an instance of {@link ArcStringType }
     * 
     */
    public ArcStringType createArcStringType() {
        return new ArcStringType();
    }

    /**
     * Create an instance of {@link MultiPolygonType }
     * 
     */
    public MultiPolygonType createMultiPolygonType() {
        return new MultiPolygonType();
    }

    /**
     * Create an instance of {@link MeasureOrNullListType }
     * 
     */
    public MeasureOrNullListType createMeasureOrNullListType() {
        return new MeasureOrNullListType();
    }

    /**
     * Create an instance of {@link CurveType }
     * 
     */
    public CurveType createCurveType() {
        return new CurveType();
    }

    /**
     * Create an instance of {@link SurfacePropertyType }
     * 
     */
    public SurfacePropertyType createSurfacePropertyType() {
        return new SurfacePropertyType();
    }

    /**
     * Create an instance of {@link CurveSegmentArrayPropertyType }
     * 
     */
    public CurveSegmentArrayPropertyType createCurveSegmentArrayPropertyType() {
        return new CurveSegmentArrayPropertyType();
    }

    /**
     * Create an instance of {@link OrientableSurfaceType }
     * 
     */
    public OrientableSurfaceType createOrientableSurfaceType() {
        return new OrientableSurfaceType();
    }

    /**
     * Create an instance of {@link ClothoidType }
     * 
     */
    public ClothoidType createClothoidType() {
        return new ClothoidType();
    }

    /**
     * Create an instance of {@link KnotType }
     * 
     */
    public KnotType createKnotType() {
        return new KnotType();
    }

    /**
     * Create an instance of {@link CircleByCenterPointType }
     * 
     */
    public CircleByCenterPointType createCircleByCenterPointType() {
        return new CircleByCenterPointType();
    }

    /**
     * Create an instance of {@link AbstractSolidType }
     * 
     */
    public AbstractSolidType createAbstractSolidType() {
        return new AbstractSolidType();
    }

    /**
     * Create an instance of {@link DefinitionProxyType }
     * 
     */
    public DefinitionProxyType createDefinitionProxyType() {
        return new DefinitionProxyType();
    }

    /**
     * Create an instance of {@link MultiGeometryType }
     * 
     */
    public MultiGeometryType createMultiGeometryType() {
        return new MultiGeometryType();
    }

    /**
     * Create an instance of {@link LineStringSegmentArrayPropertyType }
     * 
     */
    public LineStringSegmentArrayPropertyType createLineStringSegmentArrayPropertyType() {
        return new LineStringSegmentArrayPropertyType();
    }

    /**
     * Create an instance of {@link LinearRingPropertyType }
     * 
     */
    public LinearRingPropertyType createLinearRingPropertyType() {
        return new LinearRingPropertyType();
    }

    /**
     * Create an instance of {@link SolidType }
     * 
     */
    public SolidType createSolidType() {
        return new SolidType();
    }

    /**
     * Create an instance of {@link AffinePlacementType }
     * 
     */
    public AffinePlacementType createAffinePlacementType() {
        return new AffinePlacementType();
    }

    /**
     * Create an instance of {@link ScaleType }
     * 
     */
    public ScaleType createScaleType() {
        return new ScaleType();
    }

    /**
     * Create an instance of {@link UnitOfMeasureType }
     * 
     */
    public UnitOfMeasureType createUnitOfMeasureType() {
        return new UnitOfMeasureType();
    }

    /**
     * Create an instance of {@link DefinitionType }
     * 
     */
    public DefinitionType createDefinitionType() {
        return new DefinitionType();
    }

    /**
     * Create an instance of {@link RingPropertyType }
     * 
     */
    public RingPropertyType createRingPropertyType() {
        return new RingPropertyType();
    }

    /**
     * Create an instance of {@link SphereType }
     * 
     */
    public SphereType createSphereType() {
        return new SphereType();
    }

    /**
     * Create an instance of {@link AbstractRingPropertyType }
     * 
     */
    public AbstractRingPropertyType createAbstractRingPropertyType() {
        return new AbstractRingPropertyType();
    }

    /**
     * Create an instance of {@link TrianglePatchArrayPropertyType }
     * 
     */
    public TrianglePatchArrayPropertyType createTrianglePatchArrayPropertyType() {
        return new TrianglePatchArrayPropertyType();
    }

    /**
     * Create an instance of {@link MultiSolidPropertyType }
     * 
     */
    public MultiSolidPropertyType createMultiSolidPropertyType() {
        return new MultiSolidPropertyType();
    }

    /**
     * Create an instance of {@link MultiLineStringType }
     * 
     */
    public MultiLineStringType createMultiLineStringType() {
        return new MultiLineStringType();
    }

    /**
     * Create an instance of {@link MultiCurvePropertyType }
     * 
     */
    public MultiCurvePropertyType createMultiCurvePropertyType() {
        return new MultiCurvePropertyType();
    }

    /**
     * Create an instance of {@link DictionaryType }
     * 
     */
    public DictionaryType createDictionaryType() {
        return new DictionaryType();
    }

    /**
     * Create an instance of {@link DegreesType }
     * 
     */
    public DegreesType createDegreesType() {
        return new DegreesType();
    }

    /**
     * Create an instance of {@link UnitDefinition }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "UnitDefinition", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "Definition")
    public UnitDefinition createUnitDefinition(UnitDefinitionType value) {
        return new UnitDefinition(value);
    }

    /**
     * Create an instance of {@link OuterBoundaryIs }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "outerBoundaryIs", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "exterior")
    public OuterBoundaryIs createOuterBoundaryIs(AbstractRingPropertyType value) {
        return new OuterBoundaryIs(value);
    }

    /**
     * Create an instance of {@link MultiLineString }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "MultiLineString", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricAggregate")
    public MultiLineString createMultiLineString(MultiLineStringType value) {
        return new MultiLineString(value);
    }

    /**
     * Create an instance of {@link GeometricAggregate }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_GeometricAggregate", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Geometry")
    public GeometricAggregate createGeometricAggregate(AbstractGeometricAggregateType value) {
        return new GeometricAggregate(value);
    }

    /**
     * Create an instance of {@link BSpline }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "BSpline", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_CurveSegment")
    public BSpline createBSpline(BSplineType value) {
        return new BSpline(value);
    }

    /**
     * Create an instance of {@link SolidProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "solidProperty")
    public SolidProperty createSolidProperty(SolidPropertyType value) {
        return new SolidProperty(value);
    }

    /**
     * Create an instance of {@link LinearRing }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "LinearRing", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Ring")
    public LinearRing createLinearRing(LinearRingType value) {
        return new LinearRing(value);
    }

    /**
     * Create an instance of {@link TriangulatedSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "TriangulatedSurface", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "Surface")
    public TriangulatedSurface createTriangulatedSurface(TriangulatedSurfaceType value) {
        return new TriangulatedSurface(value);
    }

    /**
     * Create an instance of {@link LineStringSegment }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "LineStringSegment", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_CurveSegment")
    public LineStringSegment createLineStringSegment(LineStringSegmentType value) {
        return new LineStringSegment(value);
    }

    /**
     * Create an instance of {@link DefinitionCollection }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "DefinitionCollection", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "Definition")
    public DefinitionCollection createDefinitionCollection(DictionaryType value) {
        return new DefinitionCollection(value);
    }

    /**
     * Create an instance of {@link InnerBoundaryIs }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "innerBoundaryIs", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "interior")
    public InnerBoundaryIs createInnerBoundaryIs(AbstractRingPropertyType value) {
        return new InnerBoundaryIs(value);
    }

    /**
     * Create an instance of {@link Reference }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_reference")
    public Reference createReference(ReferenceType value) {
        return new Reference(value);
    }

    /**
     * Create an instance of {@link MultiSolidProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiSolidProperty")
    public MultiSolidProperty createMultiSolidProperty(MultiSolidPropertyType value) {
        return new MultiSolidProperty(value);
    }

    /**
     * Create an instance of {@link GriddedSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_GriddedSurface", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_ParametricCurveSurface")
    public GriddedSurface createGriddedSurface(AbstractGriddedSurfaceType value) {
        return new GriddedSurface(value);
    }

    /**
     * Create an instance of {@link UnitOfMeasure }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "unitOfMeasure")
    public UnitOfMeasure createUnitOfMeasure(UnitOfMeasureType value) {
        return new UnitOfMeasure(value);
    }

    /**
     * Create an instance of {@link SolidMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "solidMembers")
    public SolidMembers createSolidMembers(SolidArrayPropertyType value) {
        return new SolidMembers(value);
    }

    /**
     * Create an instance of {@link Circle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Circle", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "Arc")
    public Circle createCircle(CircleType value) {
        return new Circle(value);
    }

    /**
     * Create an instance of {@link CurveProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "curveProperty")
    public CurveProperty createCurveProperty(CurvePropertyType value) {
        return new CurveProperty(value);
    }

    /**
     * Create an instance of {@link ConventionalUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "ConventionalUnit", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "UnitDefinition")
    public ConventionalUnit createConventionalUnit(ConventionalUnitType value) {
        return new ConventionalUnit(value);
    }

    /**
     * Create an instance of {@link Description }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "description")
    public Description createDescription(StringOrRefType value) {
        return new Description(value);
    }

    /**
     * Create an instance of {@link SurfaceMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "surfaceMembers")
    public SurfaceMembers createSurfaceMembers(SurfaceArrayPropertyType value) {
        return new SurfaceMembers(value);
    }

    /**
     * Create an instance of {@link PolygonPatch }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "PolygonPatch", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_SurfacePatch")
    public PolygonPatch createPolygonPatch(PolygonPatchType value) {
        return new PolygonPatch(value);
    }

    /**
     * Create an instance of {@link AffinePlacement }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "AffinePlacement")
    public AffinePlacement createAffinePlacement(AffinePlacementType value) {
        return new AffinePlacement(value);
    }

    /**
     * Create an instance of {@link ArcByCenterPoint }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "ArcByCenterPoint", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_CurveSegment")
    public ArcByCenterPoint createArcByCenterPoint(ArcByCenterPointType value) {
        return new ArcByCenterPoint(value);
    }

    /**
     * Create an instance of {@link PosList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "posList")
    public PosList createPosList(DirectPositionListType value) {
        return new PosList(value);
    }

    /**
     * Create an instance of {@link MetaDataProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "metaDataProperty")
    public MetaDataProperty createMetaDataProperty(MetaDataPropertyType value) {
        return new MetaDataProperty(value);
    }

    /**
     * Create an instance of {@link SurfaceProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "surfaceProperty")
    public SurfaceProperty createSurfaceProperty(SurfacePropertyType value) {
        return new SurfaceProperty(value);
    }

    /**
     * Create an instance of {@link AbstractSolid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_Solid", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricPrimitive")
    public AbstractSolid createAbstractSolid(AbstractSolidType value) {
        return new AbstractSolid(value);
    }

    /**
     * Create an instance of {@link MultiSolid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "MultiSolid", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricAggregate")
    public MultiSolid createMultiSolid(MultiSolidType value) {
        return new MultiSolid(value);
    }

    /**
     * Create an instance of {@link AbstractRing }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_Ring", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Geometry")
    public AbstractRing createAbstractRing(AbstractRingType value) {
        return new AbstractRing(value);
    }

    /**
     * Create an instance of {@link OrientableCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "OrientableCurve", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Curve")
    public OrientableCurve createOrientableCurve(OrientableCurveType value) {
        return new OrientableCurve(value);
    }

    /**
     * Create an instance of {@link MultiPosition }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiPosition")
    public MultiPosition createMultiPosition(MultiPointPropertyType value) {
        return new MultiPosition(value);
    }

    /**
     * Create an instance of {@link DefinitionRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "definitionRef")
    public DefinitionRef createDefinitionRef(ReferenceType value) {
        return new DefinitionRef(value);
    }

    /**
     * Create an instance of {@link SurfaceMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "surfaceMember")
    public SurfaceMember createSurfaceMember(SurfacePropertyType value) {
        return new SurfaceMember(value);
    }

    /**
     * Create an instance of {@link MultiPolygon }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "MultiPolygon", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricAggregate")
    public MultiPolygon createMultiPolygon(MultiPolygonType value) {
        return new MultiPolygon(value);
    }

    /**
     * Create an instance of {@link Solid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Solid", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Solid")
    public Solid createSolid(SolidType value) {
        return new Solid(value);
    }

    /**
     * Create an instance of {@link Measure }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "measure")
    public Measure createMeasure(MeasureType value) {
        return new Measure(value);
    }

    /**
     * Create an instance of {@link PolygonMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "polygonMember")
    public PolygonMember createPolygonMember(PolygonPropertyType value) {
        return new PolygonMember(value);
    }

    /**
     * Create an instance of {@link MultiGeometry }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "MultiGeometry", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricAggregate")
    public MultiGeometry createMultiGeometry(MultiGeometryType value) {
        return new MultiGeometry(value);
    }

    /**
     * Create an instance of {@link Members }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "members")
    public Members createMembers(ArrayAssociationType value) {
        return new Members(value);
    }

    /**
     * Create an instance of {@link Association }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_association")
    public Association createAssociation(AssociationType value) {
        return new Association(value);
    }

    /**
     * Create an instance of {@link MultiCurveProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiCurveProperty")
    public MultiCurveProperty createMultiCurveProperty(MultiCurvePropertyType value) {
        return new MultiCurveProperty(value);
    }

    /**
     * Create an instance of {@link PolyhedralSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "PolyhedralSurface", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "Surface")
    public PolyhedralSurface createPolyhedralSurface(PolyhedralSurfaceType value) {
        return new PolyhedralSurface(value);
    }

    /**
     * Create an instance of {@link PolygonPatches }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "polygonPatches", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "patches")
    public PolygonPatches createPolygonPatches(PolygonPatchArrayPropertyType value) {
        return new PolygonPatches(value);
    }

    /**
     * Create an instance of {@link Name }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "name")
    public Name createName(CodeType value) {
        return new Name(value);
    }

    /**
     * Create an instance of {@link AbstractCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_Curve", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricPrimitive")
    public AbstractCurve createAbstractCurve(AbstractCurveType value) {
        return new AbstractCurve(value);
    }

    /**
     * Create an instance of {@link RoughConversionToPreferredUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "roughConversionToPreferredUnit")
    public RoughConversionToPreferredUnit createRoughConversionToPreferredUnit(ConversionToPreferredUnitType value) {
        return new RoughConversionToPreferredUnit(value);
    }

    /**
     * Create an instance of {@link Clothoid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Clothoid", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_CurveSegment")
    public Clothoid createClothoid(ClothoidType value) {
        return new Clothoid(value);
    }

    /**
     * Create an instance of {@link GeometryMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "geometryMember")
    public GeometryMember createGeometryMember(GeometryPropertyType value) {
        return new GeometryMember(value);
    }

    /**
     * Create an instance of {@link PointProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "pointProperty")
    public PointProperty createPointProperty(PointPropertyType value) {
        return new PointProperty(value);
    }

    /**
     * Create an instance of {@link Null }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Null")
    public Null createNull(List<String> value) {
        return new Null(((List<String> ) value));
    }

    /**
     * Create an instance of {@link GeometricPrimitive }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_GeometricPrimitive", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Geometry")
    public GeometricPrimitive createGeometricPrimitive(AbstractGeometricPrimitiveType value) {
        return new GeometricPrimitive(value);
    }

    /**
     * Create an instance of {@link MultiEdgeOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiEdgeOf")
    public MultiEdgeOf createMultiEdgeOf(MultiCurvePropertyType value) {
        return new MultiEdgeOf(value);
    }

    /**
     * Create an instance of {@link Curve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Curve", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Curve")
    public Curve createCurve(CurveType value) {
        return new Curve(value);
    }

    /**
     * Create an instance of {@link CurveMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "curveMembers")
    public CurveMembers createCurveMembers(CurveArrayPropertyType value) {
        return new CurveMembers(value);
    }

    /**
     * Create an instance of {@link LineStringMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "lineStringMember")
    public LineStringMember createLineStringMember(LineStringPropertyType value) {
        return new LineStringMember(value);
    }

    /**
     * Create an instance of {@link Array }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Array", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GML")
    public Array createArray(ArrayType value) {
        return new Array(value);
    }

    /**
     * Create an instance of {@link Pos }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "pos")
    public Pos createPos(DirectPositionType value) {
        return new Pos(value);
    }

    /**
     * Create an instance of {@link Arc }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Arc", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "ArcString")
    public Arc createArc(ArcType value) {
        return new Arc(value);
    }

    /**
     * Create an instance of {@link Exterior }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "exterior")
    public Exterior createExterior(AbstractRingPropertyType value) {
        return new Exterior(value);
    }

    /**
     * Create an instance of {@link GenericMetaData }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "GenericMetaData", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_MetaData")
    public GenericMetaData createGenericMetaData(GenericMetaDataType value) {
        return new GenericMetaData(value);
    }

    /**
     * Create an instance of {@link Surface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Surface", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Surface")
    public Surface createSurface(SurfaceType value) {
        return new Surface(value);
    }

    /**
     * Create an instance of {@link Point }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Point", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricPrimitive")
    public Point createPoint(PointType value) {
        return new Point(value);
    }

    /**
     * Create an instance of {@link Coord }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "coord")
    public Coord createCoord(CoordType value) {
        return new Coord(value);
    }

    /**
     * Create an instance of {@link MultiCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiCoverage")
    public MultiCoverage createMultiCoverage(MultiSurfacePropertyType value) {
        return new MultiCoverage(value);
    }

    /**
     * Create an instance of {@link PolygonProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "polygonProperty")
    public PolygonProperty createPolygonProperty(PolygonPropertyType value) {
        return new PolygonProperty(value);
    }

    /**
     * Create an instance of {@link MultiSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "MultiSurface", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricAggregate")
    public MultiSurface createMultiSurface(MultiSurfaceType value) {
        return new MultiSurface(value);
    }

    /**
     * Create an instance of {@link Angle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "angle")
    public Angle createAngle(MeasureType value) {
        return new Angle(value);
    }

    /**
     * Create an instance of {@link Geodesic }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Geodesic", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "GeodesicString")
    public Geodesic createGeodesic(GeodesicType value) {
        return new Geodesic(value);
    }

    /**
     * Create an instance of {@link SolidMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "solidMember")
    public SolidMember createSolidMember(SolidPropertyType value) {
        return new SolidMember(value);
    }

    /**
     * Create an instance of {@link OrientableSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "OrientableSurface", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Surface")
    public OrientableSurface createOrientableSurface(OrientableSurfaceType value) {
        return new OrientableSurface(value);
    }

    /**
     * Create an instance of {@link nl.b3p.csw.jaxb.gml.Object }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_Object")
    public nl.b3p.csw.jaxb.gml.Object createObject(java.lang.Object value) {
        return new nl.b3p.csw.jaxb.gml.Object(value);
    }

    /**
     * Create an instance of {@link Member }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "member")
    public Member createMember(AssociationType value) {
        return new Member(value);
    }

    /**
     * Create an instance of {@link CurveMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "curveMember")
    public CurveMember createCurveMember(CurvePropertyType value) {
        return new CurveMember(value);
    }

    /**
     * Create an instance of {@link DecimalMinutes }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "decimalMinutes")
    public DecimalMinutes createDecimalMinutes(BigDecimal value) {
        return new DecimalMinutes(value);
    }

    /**
     * Create an instance of {@link Rectangle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Rectangle", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_SurfacePatch")
    public Rectangle createRectangle(RectangleType value) {
        return new Rectangle(value);
    }

    /**
     * Create an instance of {@link Tin }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Tin", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "TriangulatedSurface")
    public Tin createTin(TinType value) {
        return new Tin(value);
    }

    /**
     * Create an instance of {@link DerivationUnitTerm }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "derivationUnitTerm")
    public DerivationUnitTerm createDerivationUnitTerm(DerivationUnitTermType value) {
        return new DerivationUnitTerm(value);
    }

    /**
     * Create an instance of {@link Polygon }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Polygon", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Surface")
    public Polygon createPolygon(PolygonType value) {
        return new Polygon(value);
    }

    /**
     * Create an instance of {@link DefinitionProxy }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "DefinitionProxy", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "Definition")
    public DefinitionProxy createDefinitionProxy(DefinitionProxyType value) {
        return new DefinitionProxy(value);
    }

    /**
     * Create an instance of {@link Seconds }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "seconds")
    public Seconds createSeconds(BigDecimal value) {
        return new Seconds(value);
    }

    /**
     * Create an instance of {@link CubicSpline }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "CubicSpline", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_CurveSegment")
    public CubicSpline createCubicSpline(CubicSplineType value) {
        return new CubicSpline(value);
    }

    /**
     * Create an instance of {@link Ring }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Ring", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Ring")
    public Ring createRing(RingType value) {
        return new Ring(value);
    }

    /**
     * Create an instance of {@link CatalogSymbol }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "catalogSymbol")
    public CatalogSymbol createCatalogSymbol(CodeType value) {
        return new CatalogSymbol(value);
    }

    /**
     * Create an instance of {@link DerivedUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "DerivedUnit", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "UnitDefinition")
    public DerivedUnit createDerivedUnit(DerivedUnitType value) {
        return new DerivedUnit(value);
    }

    /**
     * Create an instance of {@link ArcString }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "ArcString", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_CurveSegment")
    public ArcString createArcString(ArcStringType value) {
        return new ArcString(value);
    }

    /**
     * Create an instance of {@link SurfacePatch }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_SurfacePatch")
    public SurfacePatch createSurfacePatch(AbstractSurfacePatchType value) {
        return new SurfacePatch(value);
    }

    /**
     * Create an instance of {@link MultiExtentOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiExtentOf")
    public MultiExtentOf createMultiExtentOf(MultiSurfacePropertyType value) {
        return new MultiExtentOf(value);
    }

    /**
     * Create an instance of {@link MultiGeometryProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiGeometryProperty")
    public MultiGeometryProperty createMultiGeometryProperty(MultiGeometryPropertyType value) {
        return new MultiGeometryProperty(value);
    }

    /**
     * Create an instance of {@link MultiCenterOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiCenterOf")
    public MultiCenterOf createMultiCenterOf(MultiPointPropertyType value) {
        return new MultiCenterOf(value);
    }

    /**
     * Create an instance of {@link CurveSegment }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_CurveSegment")
    public CurveSegment createCurveSegment(AbstractCurveSegmentType value) {
        return new CurveSegment(value);
    }

    /**
     * Create an instance of {@link Interior }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "interior")
    public Interior createInterior(AbstractRingPropertyType value) {
        return new Interior(value);
    }

    /**
     * Create an instance of {@link CircleByCenterPoint }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "CircleByCenterPoint", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "ArcByCenterPoint")
    public CircleByCenterPoint createCircleByCenterPoint(CircleByCenterPointType value) {
        return new CircleByCenterPoint(value);
    }

    /**
     * Create an instance of {@link Sphere }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Sphere", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GriddedSurface")
    public Sphere createSphere(SphereType value) {
        return new Sphere(value);
    }

    /**
     * Create an instance of {@link SolidArrayProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "solidArrayProperty")
    public SolidArrayProperty createSolidArrayProperty(SolidArrayPropertyType value) {
        return new SolidArrayProperty(value);
    }

    /**
     * Create an instance of {@link PointMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "pointMembers")
    public PointMembers createPointMembers(PointArrayPropertyType value) {
        return new PointMembers(value);
    }

    /**
     * Create an instance of {@link Degrees }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "degrees")
    public Degrees createDegrees(DegreesType value) {
        return new Degrees(value);
    }

    /**
     * Create an instance of {@link Minutes }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "minutes")
    public Minutes createMinutes(Integer value) {
        return new Minutes(value);
    }

    /**
     * Create an instance of {@link MetaData }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_MetaData", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Object")
    public MetaData createMetaData(AbstractMetaDataType value) {
        return new MetaData(value);
    }

    /**
     * Create an instance of {@link StrictAssociation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_strictAssociation")
    public StrictAssociation createStrictAssociation(AssociationType value) {
        return new StrictAssociation(value);
    }

    /**
     * Create an instance of {@link ArcByBulge }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "ArcByBulge", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "ArcStringByBulge")
    public ArcByBulge createArcByBulge(ArcByBulgeType value) {
        return new ArcByBulge(value);
    }

    /**
     * Create an instance of {@link CurveArrayProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "curveArrayProperty")
    public CurveArrayProperty createCurveArrayProperty(CurveArrayPropertyType value) {
        return new CurveArrayProperty(value);
    }

    /**
     * Create an instance of {@link PointRep }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "pointRep")
    public PointRep createPointRep(PointPropertyType value) {
        return new PointRep(value);
    }

    /**
     * Create an instance of {@link PointArrayProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "pointArrayProperty")
    public PointArrayProperty createPointArrayProperty(PointArrayPropertyType value) {
        return new PointArrayProperty(value);
    }

    /**
     * Create an instance of {@link AbstractGeometry }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_Geometry", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GML")
    public AbstractGeometry createAbstractGeometry(AbstractGeometryType value) {
        return new AbstractGeometry(value);
    }

    /**
     * Create an instance of {@link DmsAngle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "dmsAngle")
    public DmsAngle createDmsAngle(DMSAngleType value) {
        return new DmsAngle(value);
    }

    /**
     * Create an instance of {@link Bag }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Bag", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GML")
    public Bag createBag(BagType value) {
        return new Bag(value);
    }

    /**
     * Create an instance of {@link OffsetCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "OffsetCurve", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_CurveSegment")
    public OffsetCurve createOffsetCurve(OffsetCurveType value) {
        return new OffsetCurve(value);
    }

    /**
     * Create an instance of {@link ConversionToPreferredUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "conversionToPreferredUnit")
    public ConversionToPreferredUnit createConversionToPreferredUnit(ConversionToPreferredUnitType value) {
        return new ConversionToPreferredUnit(value);
    }

    /**
     * Create an instance of {@link Coordinates }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "coordinates")
    public Coordinates createCoordinates(CoordinatesType value) {
        return new Coordinates(value);
    }

    /**
     * Create an instance of {@link MultiPoint }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "MultiPoint", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricAggregate")
    public MultiPoint createMultiPoint(MultiPointType value) {
        return new MultiPoint(value);
    }

    /**
     * Create an instance of {@link MultiCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "MultiCurve", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricAggregate")
    public MultiCurve createMultiCurve(MultiCurveType value) {
        return new MultiCurve(value);
    }

    /**
     * Create an instance of {@link Vector }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "vector")
    public Vector createVector(VectorType value) {
        return new Vector(value);
    }

    /**
     * Create an instance of {@link MultiCenterLineOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiCenterLineOf")
    public MultiCenterLineOf createMultiCenterLineOf(MultiCurvePropertyType value) {
        return new MultiCenterLineOf(value);
    }

    /**
     * Create an instance of {@link GeometryMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "geometryMembers")
    public GeometryMembers createGeometryMembers(GeometryArrayPropertyType value) {
        return new GeometryMembers(value);
    }

    /**
     * Create an instance of {@link DictionaryEntry }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "dictionaryEntry")
    public DictionaryEntry createDictionaryEntry(DictionaryEntryType value) {
        return new DictionaryEntry(value);
    }

    /**
     * Create an instance of {@link GML }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_GML", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Object")
    public GML createGML(AbstractGMLType value) {
        return new GML(value);
    }

    /**
     * Create an instance of {@link IndirectEntry }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "indirectEntry")
    public IndirectEntry createIndirectEntry(IndirectEntryType value) {
        return new IndirectEntry(value);
    }

    /**
     * Create an instance of {@link Bezier }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Bezier", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "BSpline")
    public Bezier createBezier(BezierType value) {
        return new Bezier(value);
    }

    /**
     * Create an instance of {@link MultiPointProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiPointProperty")
    public MultiPointProperty createMultiPointProperty(MultiPointPropertyType value) {
        return new MultiPointProperty(value);
    }

    /**
     * Create an instance of {@link Patches }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "patches")
    public Patches createPatches(SurfacePatchArrayPropertyType value) {
        return new Patches(value);
    }

    /**
     * Create an instance of {@link ArcStringByBulge }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "ArcStringByBulge", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_CurveSegment")
    public ArcStringByBulge createArcStringByBulge(ArcStringByBulgeType value) {
        return new ArcStringByBulge(value);
    }

    /**
     * Create an instance of {@link MultiLocation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiLocation")
    public MultiLocation createMultiLocation(MultiPointPropertyType value) {
        return new MultiLocation(value);
    }

    /**
     * Create an instance of {@link LineStringProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "lineStringProperty")
    public LineStringProperty createLineStringProperty(LineStringPropertyType value) {
        return new LineStringProperty(value);
    }

    /**
     * Create an instance of {@link TrianglePatches }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "trianglePatches", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "patches")
    public TrianglePatches createTrianglePatches(TrianglePatchArrayPropertyType value) {
        return new TrianglePatches(value);
    }

    /**
     * Create an instance of {@link MultiSurfaceProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "multiSurfaceProperty")
    public MultiSurfaceProperty createMultiSurfaceProperty(MultiSurfacePropertyType value) {
        return new MultiSurfaceProperty(value);
    }

    /**
     * Create an instance of {@link DefinitionMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "definitionMember", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "dictionaryEntry")
    public DefinitionMember createDefinitionMember(DictionaryEntryType value) {
        return new DefinitionMember(value);
    }

    /**
     * Create an instance of {@link SurfaceArrayProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "surfaceArrayProperty")
    public SurfaceArrayProperty createSurfaceArrayProperty(SurfaceArrayPropertyType value) {
        return new SurfaceArrayProperty(value);
    }

    /**
     * Create an instance of {@link Triangle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Triangle", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_SurfacePatch")
    public Triangle createTriangle(TriangleType value) {
        return new Triangle(value);
    }

    /**
     * Create an instance of {@link Cone }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Cone", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GriddedSurface")
    public Cone createCone(ConeType value) {
        return new Cone(value);
    }

    /**
     * Create an instance of {@link QuantityType }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "quantityType")
    public QuantityType createQuantityType(StringOrRefType value) {
        return new QuantityType(value);
    }

    /**
     * Create an instance of {@link LineString }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "LineString", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Curve")
    public LineString createLineString(LineStringType value) {
        return new LineString(value);
    }

    /**
     * Create an instance of {@link BaseUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "BaseUnit", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "UnitDefinition")
    public BaseUnit createBaseUnit(BaseUnitType value) {
        return new BaseUnit(value);
    }

    /**
     * Create an instance of {@link Envelope }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Envelope")
    public Envelope createEnvelope(EnvelopeType value) {
        return new Envelope(value);
    }

    /**
     * Create an instance of {@link Definition }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Definition", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GML")
    public Definition createDefinition(DefinitionType value) {
        return new Definition(value);
    }

    /**
     * Create an instance of {@link GeodesicString }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "GeodesicString", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_CurveSegment")
    public GeodesicString createGeodesicString(GeodesicStringType value) {
        return new GeodesicString(value);
    }

    /**
     * Create an instance of {@link AbstractSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_Surface", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GeometricPrimitive")
    public AbstractSurface createAbstractSurface(AbstractSurfaceType value) {
        return new AbstractSurface(value);
    }

    /**
     * Create an instance of {@link BaseSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "baseSurface")
    public BaseSurface createBaseSurface(SurfacePropertyType value) {
        return new BaseSurface(value);
    }

    /**
     * Create an instance of {@link PointMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "pointMember")
    public PointMember createPointMember(PointPropertyType value) {
        return new PointMember(value);
    }

    /**
     * Create an instance of {@link Cylinder }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Cylinder", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_GriddedSurface")
    public Cylinder createCylinder(CylinderType value) {
        return new Cylinder(value);
    }

    /**
     * Create an instance of {@link Segments }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "segments")
    public Segments createSegments(CurveSegmentArrayPropertyType value) {
        return new Segments(value);
    }

    /**
     * Create an instance of {@link ParametricCurveSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "_ParametricCurveSurface", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_SurfacePatch")
    public ParametricCurveSurface createParametricCurveSurface(AbstractParametricCurveSurfaceType value) {
        return new ParametricCurveSurface(value);
    }

    /**
     * Create an instance of {@link Dictionary }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "Dictionary", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "Definition")
    public Dictionary createDictionary(DictionaryType value) {
        return new Dictionary(value);
    }

    /**
     * Create an instance of {@link BaseCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml", name = "baseCurve")
    public BaseCurve createBaseCurve(CurvePropertyType value) {
        return new BaseCurve(value);
    }

}
